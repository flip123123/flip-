/* docs/css/extra.css */

/* --- CSS 变量定义 --- */
:root {
    /* 默认的浅色模式颜色 */
    --background-color-light: #f4f7f6;
    --text-color-light: #333;
    --link-color-light: #007bff;

    /* 默认的深色模式颜色 */
    --background-color-dark: #2c3e50;
    --text-color-dark: #ecf0f1;
    --link-color-dark: #03a9f4;

    /* 默认的主色调 */
    --primary-accent-color: #3498db;
}

/* --- Material for MkDocs 主题的全局覆盖 (仅影响主内容区) --- */

/* 限制主色调设置到 .md-content 或 body 的特定部分，而不是全局 body */
/* Material for MkDocs 已经为许多颜色方案提供了内置的 data-md-color-primary 属性映射 */
/* 如果你需要为 'blue', 'green' 等添加自定义主色，可以保留以下，但要确保它们不会影响侧边栏 */
/* 通常 Material 主题在 body 上直接处理颜色，如果它响应了 body[data-md-color-primary]，侧边栏也会跟着变 */
/* 为了不影响侧边栏，我们需要确保你的 CSS *不*直接修改 body 的颜色 */

/* --- 主体模式样式 (仅影响主内容区) --- */

/* 避免直接修改 body 的 background 和 color，而是找主内容区域的容器 */
/* Material for MkDocs 的主内容区域通常在 .md-content 类中 */
/* 如果你想要全局的日夜间切换效果，但又不想影响侧边栏 */
/* 这将比较棘手，因为主题的设计是整体响应的。 */

/* **最简单的办法是：** 你的 JS 是在 `body` 上设置 `data-md-color-scheme` 和 `data-md-color-primary` */
/* Material 主题会根据这两个属性来渲染页面，包括侧边栏。 */
/* 如果你希望侧边栏不跟着变，意味着你需要： */
/* A) 在 JS 中只在特定的容器上设置这些属性 (但这会破坏 Material 主题的全局响应) */
/* B) 或者，用 CSS 专门覆盖侧边栏的样式，让它不响应全局的颜色变量。 */

/* **让我们尝试方案 B：用 CSS 覆盖侧边栏的颜色，让它保持原样。** */

/* 尝试保持侧边栏的默认浅色模式 */
.md-sidebar {
    /* 确保侧边栏背景是浅色的，忽略 body 的日夜间模式 */
    background-color: var(--md-primary-bg-color, #ffffff) !important; /* 使用 Material 的默认浅色背景变量 */
    color: var(--md-default-fg-color, #333) !important; /* 使用 Material 的默认浅色文字变量 */
}

/* 如果切换到深色模式，侧边栏也应该保持默认的浅色模式 */
body[data-md-color-scheme="dark"] .md-sidebar {
    background-color: var(--md-primary-bg-color, #ffffff) !important;
    color: var(--md-default-fg-color, #333) !important;
}

/* 如果你想让侧边栏不响应主色调 */
.md-sidebar .md-nav__link--active {
    /* 移除或重置使用主色调的样式 */
    background-color: transparent !important; /* 确保非激活状态下没有背景色 */
    color: inherit !important; /* 继承默认颜色 */
}

/* 针对侧边栏链接的样式，不随主色调变化 */
.md-sidebar .md-nav__link {
    color: var(--md-default-fg-color, #333) !important; /* 保持默认文字颜色 */
}

/* 链接悬停时，不使用主色调，而是使用 Material 的默认悬停色 */
.md-sidebar .md-nav__link:hover {
    color: var(--md-accent-fg-color, #007bff) !important; /* 使用 Material 的默认链接悬停色 */
    background-color: transparent !important; /* 确保悬停时也没有背景色 */
}

/* --- 应用主题颜色到关键元素 (仅在主内容区域) --- */

/* 链接颜色，仅在主内容区域生效 */
/* 这里我们可以尝试仅在 .md-content 内部应用我们的颜色变量 */
.md-content a {
    color: var(--link-color-light);
}
body[data-md-color-scheme="dark"] .md-content a {
    color: var(--link-color-dark);
}

/* 按钮样式，如果这些按钮在主内容区域，而不是侧边栏 */
/* 假设你的切换按钮不是在侧边栏里 */
.md-button, .button1 {
    border-color: var(--primary-accent-color);
    color: var(--primary-accent-color);
}

body[data-md-color-primary="white"] .md-button,
body[data-md-color-primary="white"] .button1 {
    color: var(--primary-accent-color);
}

.md-button {
    background-color: var(--primary-accent-color);
    color: var(--background-color-light); /* 浅色模式背景 */
}
body[data-md-color-scheme="dark"] .md-button {
    color: var(--background-color-dark); /* 深色模式背景 */
}
body[data-md-color-primary="white"] .md-button {
     background-color: var(--primary-accent-color);
     color: #333; /* 深色文本 */
}


/* --- 主题切换和颜色选择按钮的样式 --- */
/* 确保这些按钮不在侧边栏，并且样式不会影响侧边栏 */

/* 为主题切换按钮 (data-md-color-scheme) 添加 active 样式 */
button[data-md-color-scheme].active {
    font-weight: bold;
    border: 2px solid var(--primary-accent-color);
}

/* 为主色调选择按钮 (.button1) 添加 active 样式 */
.tx-switch button.button1 {
    margin: 4px 2px;
    padding: 8px 12px;
    border-radius: 4px;
    border: 1px solid transparent;
    cursor: pointer;
    transition: all 0.3s ease, transform 0.2s ease;
    background-color: var(--primary-accent-color);
    color: #fff;
}

body[data-md-color-primary="white"] .tx-switch button.button1 {
    background-color: var(--primary-accent-color);
    color: #333;
    border: 1px solid #ccc;
}

.tx-switch button.button1.active {
    font-weight: bold;
    border: 2px solid var(--primary-accent-color);
    transform: scale(1.1);
}

.tx-switch button.button1 {
    padding: 5px;
    line-height: 1;
}
.tx-switch button.button1:not(.active) {
    opacity: 0.7;
}